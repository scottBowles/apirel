//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.7

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "character_inventoryitem")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub quantity: i32,
    pub character_id: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::character_character::Entity",
        from = "Column::CharacterId",
        to = "super::character_character::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    CharacterCharacter,
    #[sea_orm(has_many = "super::character_inventoryarmor::Entity")]
    CharacterInventoryarmor,
    #[sea_orm(has_many = "super::character_inventoryequipment::Entity")]
    CharacterInventoryequipment,
    #[sea_orm(has_many = "super::character_inventorytool::Entity")]
    CharacterInventorytool,
    #[sea_orm(has_many = "super::character_inventoryweapon::Entity")]
    CharacterInventoryweapon,
}

impl Related<super::character_character::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CharacterCharacter.def()
    }
}

impl Related<super::character_inventoryarmor::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CharacterInventoryarmor.def()
    }
}

impl Related<super::character_inventoryequipment::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CharacterInventoryequipment.def()
    }
}

impl Related<super::character_inventorytool::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CharacterInventorytool.def()
    }
}

impl Related<super::character_inventoryweapon::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CharacterInventoryweapon.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
