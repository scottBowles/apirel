//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.7

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "character_feature")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    #[sea_orm(unique)]
    pub name: String,
    #[sea_orm(column_type = "Text")]
    pub description: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::character_background_features::Entity")]
    CharacterBackgroundFeatures,
    #[sea_orm(has_many = "super::character_character_features_and_traits::Entity")]
    CharacterCharacterFeaturesAndTraits,
    #[sea_orm(has_many = "super::character_npc_features_and_traits::Entity")]
    CharacterNpcFeaturesAndTraits,
}

impl Related<super::character_background_features::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CharacterBackgroundFeatures.def()
    }
}

impl Related<super::character_character_features_and_traits::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CharacterCharacterFeaturesAndTraits.def()
    }
}

impl Related<super::character_npc_features_and_traits::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CharacterNpcFeaturesAndTraits.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
